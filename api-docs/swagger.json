{
  "openapi": "3.0.1",
  "info": {
    "title": "Maxine API(s)",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/actuator/metrics": {
      "get": {
        "summary": "Get the memory metrics info",
        "operationId": "actuatorMetrics",
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "example": "{\"mem\": {\"rss\": 54534144,\"heapTotal\": 25661440,\"heapUsed\": 22980160,\"external\": 1701211,\"arrayBuffers\": 83266},\"uptime\": 47.998038}"
              }
            }
          }
        }
      }
    },
    "/api/actuator/info": {
      "get": {
        "summary": "Get the project info",
        "operationId": "actuatorInfo",
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "example": "{\"build\":{\"name\":\"maxine-discovery\",\"description\":\"Maxine is a service discovery and a registry server for all the running nodes with gargantua client dependency.\",\"version\":\"1.0.0\"}}"
              }
            }
          }
        }
      }
    },
    "/api/actuator/health": {
      "get": {
        "summary": "Get the currently running heartbeat",
        "operationId": "actuatorHealth",
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "example": "{\"status\": \"UP\"}"
              }
            }
          }
        }
      }
    },
    "/api/logs/download": {
      "get": {
        "summary": "Get the Maxine log files and it's download path",
        "operationId": "Maxine Logs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": "{\"Maxine-info.log\": \"/api/logs/download/Maxine-info.log\"}"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "{\"message\":\"File not found\"}"
              }
            }
          }
        }
      }
    },
    "/api/maxine/register": {
      "post": {
        "summary": "Register the server with it's data (ServiceName, NodeName, Host, Port, Weight, ssl, timeOut, weight).",
        "operationId": "Maxine service register",
        "requestBody": {
          "description": "The service to register.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": "{\"serviceName\":\"MAXINE-123\",\"nodeName\":\"NODE-4\",\"address\":\"http://192.168.23.11:8080\",\"timeOut\":50,\"weight\":5,\"registeredAt\":\"5/4/2022, 10:00:56 am\"}"
              }
            }
          },
          "400": {
            "description": "Error, Bad Request",
            "content": {
              "application/json": {
                "example": "{\"message\": \"Please provide all of these -> hostName, nodeName, port and serviceName\"}"
              }
            }
          }
        },
        "x-codegen-request-body-name": "service"
      }
    }
  },
  "components": {
    "schemas": {
      "Service": {
        "required": [
          "hostName",
          "nodeName",
          "port",
          "serviceName"
        ],
        "type": "object",
        "properties": {
          "hostName": {
            "type": "string",
            "example": "192.168.0.1"
          },
          "nodeName": {
            "type": "string",
            "example": "node-x-1"
          },
          "port": {
            "maximum": 65353,
            "type": "integer",
            "example": 8082
          },
          "serviceName": {
            "type": "string",
            "example": "db-service"
          },
          "ssl": {
            "type": "boolean",
            "example": true
          },
          "timeOut": {
            "minimum": 1,
            "type": "integer",
            "example": 5
          },
          "weight": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "example": 5
          }
        }
      }
    }
  }
}